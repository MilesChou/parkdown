<?php

namespace Tests;

use Illuminate\Container\Container;
use MilesChou\Parkdown\Bridges\ParsedownMarkdownParser;
use MilesChou\Parkdown\Bridges\SymfonyYamlParser;
use MilesChou\Parkdown\Contracts\MarkdownParser;
use MilesChou\Parkdown\Contracts\YamlParser;
use MilesChou\Parkdown\Parser;
use PHPUnit\Framework\TestCase;

class ParserTest extends TestCase
{
    /**
     * @var Container
     */
    private $container;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->container = new Container();
        $this->container->bind(MarkdownParser::class, ParsedownMarkdownParser::class);
        $this->container->bind(YamlParser::class, SymfonyYamlParser::class);
    }

    protected function tearDown(): void
    {
        $this->container = null;

        parent::tearDown(); // TODO: Change the autogenerated stub
    }


    /**
     * @test
     */
    public function shouldReturnDocumentWhenCallParse(): void
    {
        $input = <<<Markdown
---
foo: bar
---
This is a regular paragraph.

This is another regular paragraph.
Markdown;

        $expected = <<<HTML
<p>This is a regular paragraph.</p>
<p>This is another regular paragraph.</p>
HTML;

        $actual = $this->container->make(Parser::class)->parse($input);

        $this->assertSame(['foo' => 'bar'], $actual->frontMatter());
        $this->assertSame($expected, $actual->html());
    }
}
